Create topic
kafka-topics --zookeeper 127.0.0.1:2181 --topic first_topic --create --partitions 3 --replication-factor 1

List all the topics
kafka-topics --zookeeper 127.0.0.1:2181 --list

kafka-topics --zookeeper 127.0.0.1:2181 --topic first_topic --describe

kafka-topics --zookeeper 127.0.0.1:2181 --topic second_topic --delete

kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic
kafka-console-producer --broker-list 127.0.0.1:9092 --topic first_topic --producer-property acks=all

it will read only new messages
kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic

to read all the produced messages
kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --from-beginning

order of the messages is guaranteed at the partition level

kafka-console-consumer --bootstrap-server 127.0.0.1:9092 --topic first_topic --group my-first-application

kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --list
kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --describe --group my-second-application

reset offset
kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --describe --group my-first-application --reset-offsets --to-earliest --execute --topic first_topic
shifting forward
kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --describe --group my-first-application --reset-offsets --shift-by 2 --execute --topic first_topic
shifting backward(shifts back on all the partitions)
kafka-consumer-groups --bootstrap-server 127.0.0.1:9092 --describe --group my-first-application --reset-offsets --shift-by -2 --execute --topic first_topic






